div.application {
	/* flexbox reactive ui */
	display: flex;
	/* flexbox direction, flex downward (in a column) */
	flex-direction: column;
	/* center the items in the column */
	align-items: center;
	/* 
		because this is a child of a flex container
		we want to tell it how to flex
		 - do grow 
		 - do not shrink
		 - flex based on the computed size of the element
	 */
	flex: 1 0 auto;
} 

div.application p,
div.application a,
div.application input {
	/* 
		Describe the fonts we want to show, in order of priority
		depending on what the browser has.
	*/
	font-family: 'Avenir', 'Avenir W02', 'Helvetica Neue', 'Arial', 'Times New Roman';
}

div.application p {
	/* equivalent to "bold" */
	font-weight: 500;
}

div.application button {
	/* round those edges of our button */
	border-radius: 3px;
	/* no border, browser default is gross */
	border-color: transparent;

	/* we dont want no skinny buttons */
	padding: 10px 20px;

	/* button background color is grey */
	background-color: rgb(195, 195, 195);

	/* when hovering the button, the cursor should be a pointer */
	cursor: pointer;
}

div.application button:active {
	background-color: rgb(150, 195, 195);
}

div.application button:focus {
	background-color: rgb(175, 175, 175);
	/* cast a shadow in (inset) the button on focus */
	-webkit-box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.05) inset;
	box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.05) inset;
}

/* when clicking the button */
div.application button:hover:not(:active) {
	background-color: rgb(50, 175, 175);
}

/* remove some browser defaults for prettier button action */
div.application button:active,
div.application button:visited,
div.application button:focus {
	/* no outline */
  	outline: 0;

  	/* no box shadow */
  	-webkit-box-shadow: none;
    box-shadow: none;
}

div.application div {
	/* 
		describe the spacing AROUND the button 
		top right bottom left
	*/
	margin: 40px 20px 20px 20px;
}

div.application input {
	/* if in a relative setting, display our input inline */
    display: inline-block;

    /* thin that font down */
    font-weight: 300;

    /* border our input */
    border: 1px solid rgb(220, 220, 220);

    /* with curves */
    border-radius: 2px;

    padding: 5px 10px;

    /* Specify font size, equivalent to 1 times the root size which is 100% */
    font-size: 1rem;

    /* some font rendering mumbo jumbo. basically, make our fonts smooth */
    -moz-font-smoothing: subpixel-antialiased;
    -webkit-font-smoothing: subpixel-antialiased;
    font-smoothing: subpixel-antialiased;
    margin-right: 10px;

    /* shut down the computer when input is focused. jk, makes the font italic. */
    font-style: italic;
}

a, a:visited {
	font-size: 1rem;
	font-weight: 500;
	/* font color */
	color: rgb(25, 160, 190);
}

a:active {
	color: rgb(65, 200, 230);
}

a:hover:not(:active) {
	color: rgb(45, 180, 210);
}

/* corners */

div.application .top-corner,
div.application .bottom-corner {
	cursor: pointer;

	/* some tags display inline by default but we want them to act like block tags (box model) */
	display: block;
	background-color: rgb(25, 160, 190);
	/* height and width in "viewheight" and "viewwidth" percentages */
    width: 205vw;
    height: 205vh;
    /* 
    	position relative to parent, unless top/right/bottom/left are specified, then relative to window 
    	absolute positioned blocks are also disregarded in terms of height and flex calculations, so
    	following elements will overlap. 
	*/
    position: absolute;
    /* rotate 45 degress */
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    transform: rotate(-45deg);
    /* 
    	any style changes should change in a "ease-in" fashion over a one second 
    	ease in gradually changes values at a higher delta as time passes
	*/
    transition: all 1s ease-in;
}

/*
	specify the placement of our absolutely positioned elements
	this will unpin them from their relative location and position them
	relative to the window + whatever you specify here
*/
div.application .top-corner {
    top: -100vh;
    left: -100vw;
}

div.application .bottom-corner  {
    bottom: -100vh;
    right: -100vw;
}

div.application.ready .top-corner {
    top: -200vh;
    left: -200vw;
}

div.application.ready .bottom-corner  {
    bottom: -200vh;
    right: -200vw;
}